/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.2/userguide/tutorial_java_projects.html
 */

buildscript {
    ext {
        springBootVersion = "2.1.3.RELEASE"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'org.postgresql:postgresql:42.2.6'
    }
}
plugins {
    // Apply the java plugin to add support for Java
    id 'java'
    // Apply the application plugin to add support for building an application
    id 'application'

    id "org.flywaydb.flyway" version "5.2.4"
}

apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"

targetCompatibility = '11'
sourceCompatibility = '11'

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

ext {
    mapstructVersion = "1.3.0.Final"
    lombokVersion = "1.18.8"
    specificationArgsResolverVersion = "1.1.1"
    swaggerVersion = "2.9.2"
    jjwtVersion = "0.10.5"
    restAssuredVersion = "3.1.0"
    wiremockVersion = "2.18.0"
    fakerVersion = "0.16"
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    implementation 'com.google.guava:guava:27.0.1-jre'
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:2.1.6.RELEASE"
    implementation "org.springframework.boot:spring-boot-starter-web"
    compile 'org.springframework.boot:spring-boot-starter-security:2.1.2.RELEASE'

    //jwt
    compile "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
    runtime "io.jsonwebtoken:jjwt-impl:${jjwtVersion}",
            "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"

    implementation "net.kaczmarzyk:specification-arg-resolver:${specificationArgsResolverVersion}"

    //swagger
    implementation "io.springfox:springfox-swagger2:${swaggerVersion}"
    implementation "io.springfox:springfox-swagger-ui:${swaggerVersion}"

    compile 'org.springframework.boot:spring-boot-starter-web:2.1.1.RELEASE'

    //postgres
    implementation "org.postgresql:postgresql:42.2.6"

    //apache commons
    compile 'org.apache.commons:commons-csv:1.7'
    compile 'commons-io:commons-io:2.5'


    //lombok
    implementation "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    //mapstruct
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    //flyway
    runtime 'org.flywaydb:flyway-gradle-plugin:5.2.4'


    testImplementation "io.rest-assured:rest-assured:${restAssuredVersion}"

    testImplementation("com.github.tomakehurst:wiremock:${wiremockVersion}") {
        exclude group: "junit", module: "junit"
    }

    testImplementation "org.springframework.boot:spring-boot-starter-test"

    testImplementation "com.github.javafaker:javafaker:${fakerVersion}"

    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testCompile('org.junit.jupiter:junit-jupiter-params')
    testRuntime "org.junit.jupiter:junit-jupiter-engine"

    testCompile "org.mockito:mockito-core:2.+"
    testCompile('org.mockito:mockito-junit-jupiter:2.18.3')
}

flyway {
    url = 'jdbc:postgresql://localhost:5432/challenge'
    user = 'challenge'
    password = '123123'
}

test {
    useJUnitPlatform()
}

// Define the main class for the application
mainClassName = 'com.srsystems.challenge.App'
